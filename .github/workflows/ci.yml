name: CI

on:
  push:
    branches-ignore: [ staging.tmp ]
  pull_request:
    branches-ignore: [ staging.tmp ]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [
          Android Stable
        ]
        include:
          - os: macos-10.15
            name: Android Stable
            channel: stable
            build_command: rustup target add aarch64-linux-android; PATH=$PATH:GITHUB_WORKSPACE/android-ndk-r21b/toolchains/llvm/prebuilt/linux-x86_64/bin cargo clippy --target aarch64-linux-android
            install_deps_command: |
                                  curl -LO https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip
                                  unzip -qq android-ndk-r21b-linux-x86_64.zip -d $GITHUB_WORKSPACE
                                  export NDK_HOME_BIN="$GITHUB_WORKSPACE/android-ndk-r21b/toolchains/llvm/prebuilt/linux-x86_64/bin"
                                  ln -s ${NDK_HOME_BIN}/aarch64-linux-android21-clang ${NDK_HOME_BIN}/aarch64-linux-android-clang
            make_command: PATH=$PATH:GITHUB_WORKSPACE/android-ndk-r21b/toolchains/llvm/prebuilt/linux-x86_64/bin make package
    steps:
    - uses: actions/checkout@v2
    - if: matrix.channel == 'nightly'
      name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - if: contains(matrix.build_command, 'clippy')
      run: rustup component add clippy
    - name: Install dependencies
      run: ${{ matrix.install_deps_command }}
      shell: bash
    - name: cargo test
      run: cargo test
    - if: contains(matrix.build_command, 'clippy')
      name: cargo clippy
      run: ${{ matrix.build_command }}
    - name: MacOS vulkan-portability
      if: contains(matrix.os, 'macos') && !contains(matrix.build_command, 'ios')
      run: ${{ matrix.build_command }} --features vulkan-portability
    - if: matrix.channel == 'nightly'
      run: cargo +nightly install cbindgen
    - run: ${{ matrix.make_command }}
      shell: bash
